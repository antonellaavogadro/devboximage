$schema: "1.0"
name: "HostOps"
image: microsoftwindowsdesktop_windows-ent-cpc_win11-24H2-ent-cpc

tasks:
  - name: ~/winget
    parameters:
      downloadUrl: 'https://raw.githubusercontent.com/contoso-co/common-eng-sys/main/dsc-configurations/common-config.dsc.yaml'
  
  - name: ~/winget
    parameters:
      package: Microsoft.WSL
  
  - name: ~/winget
    parameters:
      package: Microsoft.VisualStudioCode
 
  - name: ~/winget
    parameters:
      package: Microsoft.WindowsTerminal

  - name: choco
    parameters:
      package: openssh

  - name: ~/winget
    parameters:
      package: Amazon.AWSCLI

  - name: ~/winget
    parameters:
      package: Microsoft.AzureCLI

  - name: ~/winget
    parameters:
      package: eksctl.eksctl

  - name: ~/winget
    parameters:
      package: 7zip.7zip

  - name: ~/winget
    parameters:
      package: Mozilla.Firefox

  - name: ~/winget
    parameters:
      package: Microsoft.PowerBI
    
  - name: ~/winget
    parameters:
      package: Microsoft.Azure.StorageExplorer

  - name: ~/winget
    parameters:
      package: Microsoft.PowerToys

  - name: ~/winget
    parameters:
      package: Chocolatey.Chocolatey

  - name: ~/winget
    parameters:
      package: Chocolatey.ChocolateyGUI

  - name: ~/winget
    parameters:
      package: Microsoft.SQLServerManagementStudio

  - name: ~/winget
    parameters:
      package: Notepad++.Notepad++

  - name: choco
    parameters:
      package: packer

  - name: choco
    parameters:
      package: terraform

  - name: choco
    parameters:
      package: kubernetes-cli

  - name: choco
    parameters:
      package: python313
  
  - name: choco
    parameters:
      package: azure-functions-core-tools
      switches: /x64

  - name: choco
    parameters:
      package: vmware-powercli-psmodule
  
  - name: ~/powershell
    parameters:
      command: |
        (new-object net.webclient).DownloadFile('https://mw-maven-repository-manager.mathworks.com/artifactory/inhouse/com/mathworks/batup/awssaml/1.3.4/awssaml-1.3.4.zip' , 'C:\Windows\Temp\awssaml-1.3.4.zip')
        Expand-Archive -Path 'C:\Windows\Temp\awssaml-1.3.4.zip' -DestinationPath 'C:\awssaml\'
  
  - name: ~/powershell
    parameters:
      command: | 
        $Capabilities = @(
            'Rsat.ActiveDirectory.DS-LDS.Tools~~~~0.0.1.0'
            'Rsat.FileServices.Tools~~~~0.0.1.0'
            'Rsat.GroupPolicy.Management.Tools~~~~0.0.1.0'
            'Rsat.ServerManager.Tools~~~~0.0.1.0'
        )
        foreach ($Capability in $Capabilities) {
            $CapInfo = Get-WindowsCapability -Online -Name $Capability -ErrorAction SilentlyContinue
            if ($CapInfo -and $CapInfo.State -eq 'Installed') {
              continue
            } else {
                Add-WindowsCapability -Online -Name $Capability -ErrorAction SilentlyContinue
            }
        }
    
  - name: ~/powershell
    parameters:
      command: |
        # Define an array of paths to be added to the system's PATH environment variable.
        $PathsToAdd = @(
            'C:\WINDOWS\system32'
            'C:\WINDOWS'
            'C:\WINDOWS\System32\Wbem'
            'C:\WINDOWS\System32\WindowsPowerShell\v1.0\'
            'C:\WINDOWS\System32\OpenSSH\'
            'C:\Program Files\PowerShell\7'            # PowerShell 7
            'C:\Program Files\dotnet\'                 # .NET SDK
            'C:\Program Files\Git\cmd'                # Git commands
            'C:\Program Files\Common Files\Intel\WirelessCommon\' # Intel Wireless Common
            'C:\Program Files\Microsoft SDKs\Azure\CLI2\wbin' # Azure CLI
            'C:\Program Files\Amazon\AWSCLIV2\'        # AWS CLI v2
            'C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\' # SQL Server Integration Services
            'C:\Python313\'                            # Python 3.13
            'C:\Python313\Scripts\'                    # Python 3.13 Scripts
            'C:\Program Files\Microsoft VS Code\bin'  # VS Code
            'C:\ProgramData\chocolatey\bin'            # Chocolatey package manager
            'C:\Program Files\GitHub CLI\'             # GitHub CLI
            'C:\Program Files\Azure Dev CLI'          # Azure Dev CLI
            'C:\Program Files\WinGet\Links'           # Windows Package Manager (WinGet)
            'C:\Program Files\Microsoft Dev Box Agent\Scripts' # Microsoft Dev Box Agent Scripts
            'C:\Program Files\OpenSSH-Win64'          # OpenSSH for Windows
            'C:\awssaml\win64'                       # AWS SAML
            'C:\Program Files\ASCI\ActiveBatchV12\bin' # ActiveBatch
            'C:\Program Files\ASCI\ActiveBatchV12\bin\Client\Cli' # ActiveBatch CLI
             $env:LOCALAPPDATA + '\Local\Microsoft\WindowsApps'  # Expanded user-specific WindowsApps path
            'C:\WINDOWS\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps' # System WindowsApps path
        )
        # Get the current system PATH environment variable.
        $CurrentPath = [Environment]::GetEnvironmentVariable('Path', 'Machine')
        $CurrentPathArray = $CurrentPath -split ';'
        # Iterate through each path to add.
        foreach ($PathToAdd in $PathsToAdd) {
            # Check if the path exists and is valid.
            if (!(Test-Path -Path $PathToAdd -IsValid)) {
                Write-Warning "Path '$PathToAdd' is not valid or does not exist. Skipping."
                continue
            }
            # Add the path to the array if it's not already present.
            if ($CurrentPathArray -notcontains $PathToAdd) {
                $CurrentPathArray += $PathToAdd
            }
        }
        # Join the updated array back into a single string.
        $NewPath = $CurrentPathArray -join ';'
        # Set the system PATH environment variable to the new value.
        try {
            [Environment]::SetEnvironmentVariable('Path', $NewPath, 'Machine')
            Write-Host "Successfully updated system PATH."
        }
        catch {
            Write-Error "Failed to update system PATH. Error: $($_.Exception.Message)"
        }
        # Define an array of paths for the PSModulePath, prioritizing PowerShell 7.
        $PSModulePaths = @(
            '$env:ProgramFiles\PowerShell\7\Modules' # PowerShell 7 modules
            '$env:ProgramFiles\WindowsPowerShell\Modules' # Windows PowerShell modules
            '$env:SystemRoot\System32\WindowsPowerShell\v1.0\Modules' # System PowerShell modules
        )
        # Deduplicate PSModulePaths
        $UniquePSModulePaths = @{}
        $PSModulePaths | ForEach-Object {
          if (!(Test-Path -Path $_ -IsValid)) {
                Write-Warning "PSModulePath '$_' is not valid or does not exist. Skipping."
                continue
            }
          $UniquePSModulePaths[$_] = $true
        }
        # Join the unique module paths into a single string.
        $PSModulePathString = ($UniquePSModulePaths.Keys | Sort-Object) -join ';'
        # Set the PSModulePath environment variable using the correct method.
        try {
            [Environment]::SetEnvironmentVariable('PSModulePath', $PSModulePathString, 'Machine')
            Write-Host "Successfully updated system PSModulePath."
        }
        catch {
            Write-Error "Failed to update system PSModulePath. Error: $($_.Exception.Message)"
        }
  - name: ~/powershell
    parameters:
      command: |
        choco source add -n=mw-choco-internal -s 'http://proget.mathworks.com/nuget/choco-internal/'
        choco feature enable -n=allowGlobalConfirmation
        $packages = @(
            'mw-aducextension',
            'mw-activebatchconsole',
            'mw-configmanagerconsole'
        )
        foreach ($package in $packages) {
            choco install $package --yes --no-progress
        }
  
userTasks: 
  - name: ~/powershell
    parameters:
      command: |
        Start-Process -FilePath 'C:\Windows\Resources\Themes\dark.theme' -Wait -PassThru